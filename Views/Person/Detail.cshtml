@model MvcDirectory.Models.PersonModel.PersonDetailViewModel
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using System.IO

<style>
    /* Add this style to the body element to make the footer sticky */
    body {
        margin: 0;
        padding: 0;
    }

    /* Add a custom class to the container to push the footer to the bottom */
    .min-vh-100 {
        min-height: 100vh;
    }

    /* Add these styles to make the footer sticky at the bottom */
    .d-flex {
        display: flex;
    }

    .flex-column {
        flex-direction: column;
    }

    .justify-content-between {
        justify-content: space-between;
    }

    /* Add any other styles you want to customize here */
    .profile-picture {
        position: relative;
        width: 200px;
        height: 200px;
        overflow: hidden;
        border-radius: 50%;
    }

    .profile-picture-label {
        display: block;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .profile-picture-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border: 2px solid black; /* Add the border style */
        border-radius: 50%;
        border-color: dimgray;
        transition: opacity 0.3s;
    }


    .profile-picture-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        opacity: 0.4; /* Başlangıçta overlay görünmez olacak */
        transition: opacity 0.3s;
    }

    .profile-picture-overlay1 {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        opacity: 0; /* Başlangıçta overlay görünmez olacak */
        transition: opacity 0.3s;
    }

    .profile-picture-label:hover .profile-picture-overlay1 {
        opacity: 1; /* Overlay'e tıklanınca görünür olacak */
    }

    .profile-picture-label:hover .profile-picture-overlay {
        opacity: 1; /* Overlay'e tıklanınca görünür olacak */
    }

    .profile-picture-overlay1 i {
        font-size: 24px;
        color: white;
    }

    .profile-picture-overlay i {
        font-size: 24px;
        color: white;
    }

    .profile-picture-text {
        color: white;
        font-weight: bold;
        margin-top: 5px;
    }

    .save-button {
        font-size: 14px;
        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        width: 100%;
    }
</style>
<html>
<body>
    <section class="container mt-5">
        <div class="d-flex flex-column justify-content-between min-vh-100">
            <div>
                <div class="row justify-content-center">
                    <div class="col-md-10">
                        <div class="card border-primary">
                            <div class="card-header bg-primary text-white">
                                <h1 class="display-4 font-weight-light text-center">Details of @Model.Person.Name</h1>
                            </div>
                            <div class="card-body">
                                <div class="row">

                                    <div class="col-md-6">
                                        <dl class="row">
                                            <dt class="col-sm-4">Name :</dt>
                                            <dd class="col-sm-8">@Model.Person.Name</dd>

                                            <dt class="col-sm-4">Phone :</dt>
                                            <dd class="col-sm-8">@Model.Person.PhoneNumber</dd>

                                            <dt class="col-sm-4">Email :</dt>
                                            <dd class="col-sm-8">@Model.Person.Email</dd>

                                            <dt class="col-sm-4">Profile Photo:</dt>
                                            <dd class="col-sm-8">
                                                <div class="profile-picture">
                                                    <label class="profile-picture-label" for="fileInput"></label>
                                                    <img class="profile-picture-image" src="~/uploads/@TempData["UploadedFileName"]" alt="Profile Photo" />
                                                    <div class="profile-picture-overlay">
                                                        <i class="fas fa-camera"></i>
                                                        <div class="profile-picture-text">Change Photo</div>
                                                    </div>
                                                </div>
                                                <input type="file" id="fileInput" name="CroppedPhoto" accept="image/*" class="d-none" />
                                            </dd>
                                        </dl>
                                        <div class="col-md-4" style="right:-500px; top:-50px;">
                                            <form id="personalNotesForm" method="post" asp-controller="Person" asp-action="AddPersonalNotes" enctype="multipart/form-data">
                                                <div class="form-group">
                                                    <label for="personalNotes" class="font-weight-bold">Personal Notes:</label>
                                                    <textarea class="form-control" id="personalNotes" name="Person.PersonalNotes" rows="4">@Model.Person.PersonalNotes</textarea>
                                                </div>

                                                <input type="hidden" asp-for="Person.Id" />

                                                <div class="mt-3">
                                                    <button type="submit" class="btn btn-primary save-button">Save</button>
                                                </div>
                                            </form>

                                            <!-- Add success message display -->
                                            @if (TempData["BasariliMesaj"] != null)
                                            {
                                                <div class="alert alert-success mt-3">@TempData["BasariliMesaj"]</div>
                                            }
                                        </div>
                                    </div>
                                    

                                </div>

                                <div class="card-footer text-muted text-center">
                                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Return</a>
                                    <a href="@Url.Action("Update", new { id = Model.Person.Id })" class="btn btn-outline-primary">Update</a>
                                    <a href="#" class="btn btn-outline-danger btn-delete" data-id="@Model.Person.Id">Delete</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div>
                    <!-- Empty div for pushing the footer to the bottom -->
                </div>
            </div>
        </div>

    </section>

    @section Scripts {
        <script>
        // Handle delete button click
        $(".btn-delete").on("click", function () {
            var id = $(this).data("id");
            if (confirm("Are you sure you want to delete the record?")) {
                $.ajax({
                    url: "@Url.Action("Delete", "Person")",
                    type: "POST",
                    data: { id: id },
                    success: function (result) {
                        window.location.href = "@Url.Action("Index")";
                    },
                    error: function () {
                        alert("An error occurred while deleting the record.");
                    }
                });
            }
        });

        // Form gönderildiğinde çalışacak kod
        $("#personalNotesForm").submit(function (e) {
            e.preventDefault(); // Sayfa yenilenmesini engellemek için formu submit etmeyi durduruyoruz

            // Form verilerini alıyoruz
            var formData = new FormData(this);

            // Eğer fotoğraf seçilmişse, formData içine ekliyoruz
            var file = $("#fileInput")[0].files[0];
            if (file) {
                formData.append("CroppedPhoto", file);
            }

            // AJAX ile formu sunucuya gönderiyoruz
            $.ajax({
                url: $(this).attr("action"),
                type: "POST",
                data: formData,
                processData: false, // Dosyaları işleme sokma
                contentType: false, // Content tipi ayarlamama
                success: function (result) {
                    // Başarılı olduğunda sayfayı yenile
                    window.location.reload();
                },
                error: function () {
                    alert("An error occurred while saving the data.");
                }
            });
            $("#fileInput").change(function () {
                var file = this.files[0];
                if (file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        // Seçilen fotoğrafın önizlemesini overlay içine ekliyoruz
                        $(".profile-picture-image").attr("src", e.target.result);
                        // Overlay'i görünür yapıyoruz
                        $(".profile-picture-overlay").css("opacity", 1);
                    }
                    reader.readAsDataURL(file);
                }
            });
        });
        </script>
    }

</body>
</html>
