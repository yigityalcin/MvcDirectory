@model MvcDirectory.Models.PersonModel.PersonAddViewModel

@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<body>
    <section class="container mt-5 mb-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-dark bg-white">
                        <h1 class="display-4 font-weight-light text-center">Add New Person</h1>
                    </div>

                    <div class="card-body bg-white">
                        <form method="post" enctype="multipart/form-data" asp-action="Add" class="needs-validation" novalidate>
                            <div class="form-group">
                                <label for="name">Name</label>
                                <input asp-for="Person.Name" class="form-control" id="name" required />
                                <div class="invalid-feedback">
                                    Please enter a valid name.
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="phoneNumber">Phone Number</label>
                                <input asp-for="Person.PhoneNumber" class="form-control" id="phoneNumber" required pattern="\d{10,11}" title="Enter a valid phone number (10 or 11 digits)" />
                                <div class="invalid-feedback">
                                    Please enter a valid phone number (10 or 11 digits).
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="email">Email</label>
                                <input asp-for="Person.Email" class="form-control" id="email" type="email" required />
                                <div class="invalid-feedback">
                                    Please enter a valid email address.
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="form-label" for="profilePhoto">Select Photo:</label>
                                <input type="file" id="profilePhoto" name="cropcrop" accept="image/*" class="file-input" />
                            </div>

                            <div class="form-group">
                                <label for="photoPreview">Photo Preview:</label>
                                <div class="photo-preview">
                                    <img id="previewImg" src="#" alt="Photo Preview" style="max-width: 200px; max-height: 200px; display: none; border: 2px solid #ddd; border-radius: 5px; padding: 5px;" />
                                    <p id="noImageMsg" style="display: block; text-align: center; font-weight: bold; color: #808080;">No photo selected</p>
                                </div>
                            </div>

                            <div id="cropperContainer" style="display: none;">
                                <img id="cropperImage" src="#" alt="Crop Image" />
                            </div>

                            <div class="form-group">
                                <div class="btn-group">
                                    <button type="button" id="cropButton" class="btn btn-primary bg-secondary text-white border-0" disabled>Crop Image</button>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="croppedImagePreview">Cropped Image Preview:</label>
                                <div class="cropped-image-preview">
                                    <img id="previewCroppedImg" src="#" name="cropg" alt="Cropped Image Preview" style="max-width: 200px; max-height: 200px; display: none; border: 2px solid #ddd; border-radius: 5px; padding: 5px;" />
                                </div>
                            </div>

                            <input type="hidden" id="croppedImage" name="CroppedImage" />
                            <input type="hidden" asp-for="Person.CroppedPhoto" />

                            <div class="form-group text-center">
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Return</a>
                                <a href="@Url.Action("Read", "Person")" class="btn btn-primary btn-md add-button border-0 bg-secondary">Read From Card</a>
                                <button type="submit" class="btn btn-primary text-dark bg-white border-0">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>

    @section Scripts {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var image = document.getElementById("previewImg");
                var noImageMsg = document.getElementById("noImageMsg");
                var cropperContainer = document.getElementById("cropperContainer");
                var cropperImage = document.getElementById("cropperImage");
                var cropper;

                var currentImage = null;

                document.getElementById("profilePhoto").addEventListener("change", function (event) {
                    var input = event.target;
                    var file = input.files[0];
                    if (file) {
                        var reader = new FileReader();
                        reader.onload = function () {
                            if (currentImage) {
                                currentImage.remove();
                            }

                            image.style.display = "none";
                            noImageMsg.style.display = "none";
                            cropperContainer.style.display = "block";
                            cropperImage.src = URL.createObjectURL(file);
                            cropper = new Cropper(cropperImage, {
                                aspectRatio: 1,
                                viewMode: 2,
                            });
                            currentImage = cropperImage;
                            document.getElementById("cropButton").removeAttribute("disabled");
                        };
                        reader.readAsDataURL(file);
                    } else {
                        image.style.display = "block";
                        image.src = "/images/a1.png";
                        cropperContainer.style.display = "none";
                        document.getElementById("cropButton").setAttribute("disabled", "disabled");
                    }
                });

                document.getElementById("cropButton").addEventListener("click", function () {
                    cropper.crop();
                    var croppedImageData = cropper.getCroppedCanvas().toDataURL();
                    document.getElementById("croppedImage").value = croppedImageData;

                    // Show the cropped image preview
                    var previewCroppedImage = document.getElementById("previewCroppedImg");
                    previewCroppedImage.style.display = "block";
                    previewCroppedImage.src = croppedImageData;

                    // Updated: Trigger the form submission after cropping and updating preview
                    /*document.querySelector("form").submit();*/
                });
            });
        </script>
    }
</body>

